// Code generated by go-swagger; DO NOT EDIT.

package email

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateEmailAddressReader is a Reader for the UpdateEmailAddress structure.
type UpdateEmailAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEmailAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEmailAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateEmailAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateEmailAddressMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateEmailAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateEmailAddressOK creates a UpdateEmailAddressOK with default headers values
func NewUpdateEmailAddressOK() *UpdateEmailAddressOK {
	return &UpdateEmailAddressOK{}
}

/* UpdateEmailAddressOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateEmailAddressOK struct {
}

func (o *UpdateEmailAddressOK) Error() string {
	return fmt.Sprintf("[PUT /email/{emailAddress}][%d] updateEmailAddressOK ", 200)
}

func (o *UpdateEmailAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailAddressNotFound creates a UpdateEmailAddressNotFound with default headers values
func NewUpdateEmailAddressNotFound() *UpdateEmailAddressNotFound {
	return &UpdateEmailAddressNotFound{}
}

/* UpdateEmailAddressNotFound describes a response with status code 404, with default header values.

Account not found
*/
type UpdateEmailAddressNotFound struct {
}

func (o *UpdateEmailAddressNotFound) Error() string {
	return fmt.Sprintf("[PUT /email/{emailAddress}][%d] updateEmailAddressNotFound ", 404)
}

func (o *UpdateEmailAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailAddressMethodNotAllowed creates a UpdateEmailAddressMethodNotAllowed with default headers values
func NewUpdateEmailAddressMethodNotAllowed() *UpdateEmailAddressMethodNotAllowed {
	return &UpdateEmailAddressMethodNotAllowed{}
}

/* UpdateEmailAddressMethodNotAllowed describes a response with status code 405, with default header values.

Invalid input
*/
type UpdateEmailAddressMethodNotAllowed struct {
}

func (o *UpdateEmailAddressMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /email/{emailAddress}][%d] updateEmailAddressMethodNotAllowed ", 405)
}

func (o *UpdateEmailAddressMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailAddressInternalServerError creates a UpdateEmailAddressInternalServerError with default headers values
func NewUpdateEmailAddressInternalServerError() *UpdateEmailAddressInternalServerError {
	return &UpdateEmailAddressInternalServerError{}
}

/* UpdateEmailAddressInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type UpdateEmailAddressInternalServerError struct {
}

func (o *UpdateEmailAddressInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /email/{emailAddress}][%d] updateEmailAddressInternalServerError ", 500)
}

func (o *UpdateEmailAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
