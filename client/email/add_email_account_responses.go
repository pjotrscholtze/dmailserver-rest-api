// Code generated by go-swagger; DO NOT EDIT.

package email

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddEmailAccountReader is a Reader for the AddEmailAccount structure.
type AddEmailAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddEmailAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddEmailAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 405:
		result := NewAddEmailAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewAddEmailAccountNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddEmailAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddEmailAccountOK creates a AddEmailAccountOK with default headers values
func NewAddEmailAccountOK() *AddEmailAccountOK {
	return &AddEmailAccountOK{}
}

/* AddEmailAccountOK describes a response with status code 200, with default header values.

Successful operation
*/
type AddEmailAccountOK struct {
	Payload string
}

func (o *AddEmailAccountOK) Error() string {
	return fmt.Sprintf("[POST /email][%d] addEmailAccountOK  %+v", 200, o.Payload)
}
func (o *AddEmailAccountOK) GetPayload() string {
	return o.Payload
}

func (o *AddEmailAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEmailAccountMethodNotAllowed creates a AddEmailAccountMethodNotAllowed with default headers values
func NewAddEmailAccountMethodNotAllowed() *AddEmailAccountMethodNotAllowed {
	return &AddEmailAccountMethodNotAllowed{}
}

/* AddEmailAccountMethodNotAllowed describes a response with status code 405, with default header values.

Invalid input
*/
type AddEmailAccountMethodNotAllowed struct {
}

func (o *AddEmailAccountMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /email][%d] addEmailAccountMethodNotAllowed ", 405)
}

func (o *AddEmailAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEmailAccountNotAcceptable creates a AddEmailAccountNotAcceptable with default headers values
func NewAddEmailAccountNotAcceptable() *AddEmailAccountNotAcceptable {
	return &AddEmailAccountNotAcceptable{}
}

/* AddEmailAccountNotAcceptable describes a response with status code 406, with default header values.

Email address already exists!
*/
type AddEmailAccountNotAcceptable struct {
}

func (o *AddEmailAccountNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /email][%d] addEmailAccountNotAcceptable ", 406)
}

func (o *AddEmailAccountNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEmailAccountInternalServerError creates a AddEmailAccountInternalServerError with default headers values
func NewAddEmailAccountInternalServerError() *AddEmailAccountInternalServerError {
	return &AddEmailAccountInternalServerError{}
}

/* AddEmailAccountInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type AddEmailAccountInternalServerError struct {
}

func (o *AddEmailAccountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /email][%d] addEmailAccountInternalServerError ", 500)
}

func (o *AddEmailAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
